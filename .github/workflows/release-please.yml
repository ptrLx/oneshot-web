on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

name: release

jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - name: Release Please
        id: release
        uses: google-github-actions/release-please-action@v3
        with:
          release-type: node
          package-name: oneshot-web
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}

  docker-image-push:
    needs: [release-please]
    if: ${{ needs.release-please.outputs.release_created }}
    name: Push Docker Image to Docker Hub
    runs-on: ubuntu-latest
    env:
      tag_name: ${{ needs.release-please.outputs.tag_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Compile frontend
        run: |
          cd frontend
          npm install
          npm run build
          cd ..

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          platforms: linux/amd64,linux/arm64

      - name: Build and push image
        uses: docker/build-push-action@v3
        with:
          platforms: linux/amd64,linux/arm64
          context: .
          file: Dockerfile
          push: true
          tags: ptrlx/oneshot-web:${{ env.tag_name }}, ptrlx/oneshot-web:latest

      #* Not working, please update README in Docker Hub manually
      #// - name: Update Docker Hub Readme
      #//   uses: peter-evans/dockerhub-description@v3
      #//   with:
      #//     username: ${{ secrets.DOCKER_HUB_USERNAME }}
      #//     password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      #//     repository: ptrlx/oneshot-web
      #//     readme-filepath: DEPLOY.md

  build-apk:
    needs: [release-please]
    if: ${{ needs.release-please.outputs.release_created }}
    name: Build APK
    runs-on: ubuntu-latest
    env:
      tag_name: ${{ needs.release-please.outputs.tag_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Compile frontend
        run: |
          cd frontend
          npm install -g @ionic/cli
          npm install
          VITE_DEPLOYMENT_MODE=ANDROID_PROD npx ionic capacitor build android --prod --no-open
          cd ..

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: "adopt"
          java-version: "17"

      # - name: Setup Android SDK
      #   uses: android-actions/setup-android@v3

      - name: Build APK
        run: |
          cd frontend/android
          ./gradlew assembleRelease
          cd ..

      - name: Move APK to artifacts
        run: mv frontend/android/app/build/outputs/apk/release/app-release-unsigned.apk ${{ github.workspace }}/app-release-unsigned.apk

      # todo: sign apk
      # - name: Sign APK
      #   run: |
      #     jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 -keystore your-key.keystore -storepass your-storepass -keypass your-keypass ${{ github.workspace }}/app-release-unsigned.apk your-alias
      #     zipalign -v 4 ${{ github.workspace }}/app-release-unsigned.apk app-release-signed.apk

      - name: Upload APK
        id: upload
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload ${{ env.tag_name }} app-release-unsigned.apk
